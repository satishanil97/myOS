alias physicalSP S0;
alias sysCallNo S1;
alias filename S2;

physicalSP = [PTBR + 2*(SP/512)]*512  + (SP%512);
sysCallNo = [physicalSP - 1];
<<<<<<< HEAD
filename = [physicalSP - 3];
=======
S2 = [physicalSP - 3];
breakpoint;
>>>>>>> 402366b0a84fd3361888ccdcf02e6c30a3dd6345

if(sysCallNo == 1) then
	alias i S3;
	i = FAT;
	while(i!=FAT+512) do
<<<<<<< HEAD
		if([i] == filename) then //file exists
=======
		if([i]==S2) then //file exists
>>>>>>> 402366b0a84fd3361888ccdcf02e6c30a3dd6345
			[physicalSP - 2]=0;  //success
			ireturn;
		endif;
		i = i+8;
	endwhile;
<<<<<<< HEAD

=======
	
>>>>>>> 402366b0a84fd3361888ccdcf02e6c30a3dd6345
	i = 3072;
	while(i<=3519 && [i]!=0) do //search for empty blocks
		i = i+1;
	endwhile;
	if(i==3520) then
		[physicalSP - 2] = -1; //no free blocks. Failure
		ireturn;
	endif;
	i = i-3072; //get the block number of the free block
<<<<<<< HEAD

=======
	
>>>>>>> 402366b0a84fd3361888ccdcf02e6c30a3dd6345
	alias j S4;
	j = FAT;
	while(j < FAT+512 && [j+2]!=-1) do //search for an empty fat entry(basic block is -1)
		j = j+8;
	endwhile;
	if(j==FAT+512) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	[j] = filename;
	[j+1] = 0;
	[j+2] = i;
<<<<<<< HEAD

=======
	
>>>>>>> 402366b0a84fd3361888ccdcf02e6c30a3dd6345
	load(1,[j+2]); //load basic block to scratchpad
	i = 512;
	while(i<1024) do
		[i] = -1; //set all entries in the basic block to -1. No data blocks for this file.
		i = i+1;
	endwhile;
	store(1,[j+2]); //store the basic block back into the disk

	[3072 + [j+2]] = 1; //df entry set to 1. Used.
	store(5,19); //store the updated copies of FAT and df
	store(6,20);
	[physicalSP-2] = 0;
	ireturn;
endif;

<<<<<<< HEAD
if(sysCallNo == 4) then
    alias i S3;
		i = 0;
		while( (i < 512) && ([FAT + i] != filename) ) do
			i = i+8;
		endwhile;

    if(i >= 512) then
        [physicalSP - 2] = -1;
        ireturn;
    endif;

    alias FAT_index S4;

    FAT_index = i/8;

		alias SOFT S5;
    SOFT = 1344;

		i = 0;

		while( ([SOFT + i] != FAT_index) && (i < 128) ) do
        i = i + 2;
    endwhile;

    if(i <= 127) then
			[physicalSP - 2] = -1;
			ireturn;
		endif;

		i = [FAT + FAT_index*8 + 2];

		load(1,i);

		alias dataBlock S6;

		alias j S7;
		alias k S8;

		j = 0;

		while(j < 256) do
			i = [FAT + FAT_index*8 + 2];
			load(1,i);

			dataBlock = [512 + j];

			k = 0;

			if(dataBlock != -1) then
				while(k < 512) do
					[512 + k] = "";
					k = k + 1;
				endwhile;

				store(1,dataBlock);

				[3072 + dataBlock] = 0;
				
			endif;

			j = j + 1;
		endwhile;

		[3072 + i] = 0;

		[FAT + FAT_index*8 + 0] = -1;
		[FAT + FAT_index*8 + 1] = 0;
		[FAT + FAT_index*8 + 2] = -1;

		store(5,19);
		store(6,20);

		[physicalSP - 2] = 0;
		ireturn;

endif;

ireturn;
=======
	
>>>>>>> 402366b0a84fd3361888ccdcf02e6c30a3dd6345
